/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.questionsandanswers.vista;

import com.questionsandanswers.infra.Utils;
import com.questionsandanswers.model.Jugador;
import com.questionsandanswers.model.NivelEnum;
import com.questionsandanswers.model.Pregunta;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author 57322
 */
public class GUI extends javax.swing.JFrame {

    Utils proceso = new Utils();
    Pregunta preguntaActual;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtPregunta = new javax.swing.JLabel();
        jLabelPuntaje = new javax.swing.JLabel();
        txtNivel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.setLayout(new java.awt.BorderLayout());

        txtPregunta.setText("Pregunta N°: 0");

        jLabelPuntaje.setText("Puntaje: 0");

        txtNivel.setText("Nivel: ___");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtPregunta)
                        .addGap(92, 92, 92)
                        .addComponent(txtNivel))
                    .addComponent(jLabelPuntaje))
                .addGap(0, 393, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPregunta)
                    .addComponent(txtNivel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPuntaje, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("¡PREGUNTAS Y RESPUESTAS!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 0)));
        jPanel4.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean validarRespuesta(Pregunta pregunta, String respuesta) {
        int indice = 0;
        switch (respuesta) {
            case "A":
                indice = 0;
                break;
            case "B":
                indice = 1;
                break;
            case "C":
                indice = 2;
                break;
            case "D":
                indice = 3;
                break;
        }
        if (pregunta.getOpciones().get(indice).esCorrecta()) {
            return true;
        } else {
            return false;
        }

    }

    public void iniciarJuego() throws InterruptedException, NullPointerException {
        NivelEnum nivelActual = NivelEnum.NOVATO;
        /*Iniciar valores de preguntas en las respectivas categorías*/
        proceso.iniciarPreguntas();
        /*Formato de la Pregunta*/
        JLabel pregunta = new JLabel();
        Border border = pregunta.getBorder();
        Border margin = new EmptyBorder(15, 15, 15, 15);
        pregunta.setBorder(new CompoundBorder(border, margin));
        String respuesta;
        /*Crear Jugador*/
        Jugador player = new Jugador(proceso.solicitarUsuario());
        int numeroPregunta = 0;
        while (true) {
            this.txtPregunta.setText("Pregunta N°: " + ++numeroPregunta);
            this.txtNivel.setText("Nivel: " + nivelActual.toString());
            switch (nivelActual) {
                case NOVATO:
                    /*Se muestra el número de pregunta y nivel*/
                    preguntaActual = proceso.elegirPregunta(NivelEnum.NOVATO);
                    pregunta.setText(preguntaActual.toString());
                    jPanel4.revalidate();
                    jPanel4.add(pregunta);
                    jPanel4.revalidate();
                     {
                        try {
                            Thread.sleep(1000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    respuesta = JOptionPane.showInputDialog("¡RESPONDA!");
                    /*Si la respuesta es correcta*/
                    if (validarRespuesta(preguntaActual, respuesta.toUpperCase().replace(" ", ""))) {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA CORRECTA!");
                        player.setScore(player.getScore() + 2);//Aumenta el puntaje
                        this.jLabelPuntaje.setText("Puntaje: " + player.getScore());//Se actualiza en la GUI
                        player.getCorrectas().add(preguntaActual);
                        nivelActual = NivelEnum.FACIL;//Se pasa al siguiente nivel
                    } else {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA INCORRECTA! \n JUEGO TERMINADO :(");
                        player.getIncorrectas().add(preguntaActual);
                        proceso.guardarReporte(player.jugadorToJson());

                        System.exit(0);
                    }

                    break;

                case FACIL:
                    preguntaActual = proceso.elegirPregunta(NivelEnum.FACIL);
                    pregunta.setText(preguntaActual.toString());
                    Thread.sleep(1000);
                    respuesta = JOptionPane.showInputDialog("¡RESPONDA!");
                    if (validarRespuesta(preguntaActual, respuesta.toUpperCase().replace(" ", ""))) {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA CORRECTA!");
                        player.setScore(player.getScore() + 4);
                        this.jLabelPuntaje.setText("Puntaje: " + player.getScore());
                        player.getCorrectas().add(preguntaActual);
                        nivelActual = NivelEnum.MEDIO;
                    } else {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA INCORRECTA! \n JUEGO TERMINADO :(");
                        player.getIncorrectas().add(preguntaActual);
                        proceso.guardarReporte(player.jugadorToJson());
                        System.exit(0);
                    }
                    break;

                case MEDIO:
                    preguntaActual = proceso.elegirPregunta(NivelEnum.MEDIO);
                    pregunta.setText(preguntaActual.toString());
                    Thread.sleep(1000);
                    respuesta = JOptionPane.showInputDialog("¡RESPONDA!");
                    if (validarRespuesta(preguntaActual, respuesta.toUpperCase().replace(" ", ""))) {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA CORRECTA!");
                        player.setScore(player.getScore() + 6);
                        this.jLabelPuntaje.setText("Puntaje: " + player.getScore());
                        player.getCorrectas().add(preguntaActual);
                        nivelActual = NivelEnum.DIFICIL;

                    } else {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA INCORRECTA! \n JUEGO TERMINADO :(");
                        player.getIncorrectas().add(preguntaActual);
                        proceso.guardarReporte(player.jugadorToJson());
                        System.exit(0);
                    }

                    break;
                case DIFICIL:
                    preguntaActual = proceso.elegirPregunta(NivelEnum.DIFICIL);
                    pregunta.setText(preguntaActual.toString());
                    Thread.sleep(1000);
                    respuesta = JOptionPane.showInputDialog("¡RESPONDA!");
                    if (validarRespuesta(preguntaActual, respuesta.toUpperCase().replace(" ", ""))) {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA CORRECTA!");
                        player.setScore(player.getScore() + 8);
                        this.jLabelPuntaje.setText("Puntaje: " + player.getScore());
                        player.getCorrectas().add(preguntaActual);
                        nivelActual = NivelEnum.EPICO;

                    } else {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA INCORRECTA! \n JUEGO TERMINADO :(");
                        player.getIncorrectas().add(preguntaActual);
                        proceso.guardarReporte(player.jugadorToJson());
                        System.exit(0);
                    }

                    break;

                case EPICO:
                    preguntaActual = proceso.elegirPregunta(NivelEnum.EPICO);
                    pregunta.setText(preguntaActual.toString());
                    Thread.sleep(1000);
                    respuesta = JOptionPane.showInputDialog("¡RESPONDA!");
                    if (validarRespuesta(preguntaActual, respuesta.toUpperCase().replace(" ", ""))) {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA CORRECTA HAS COMPLETADO TODO EL JUEGO!");
                        player.setScore(player.getScore() + 10);
                        this.jLabelPuntaje.setText("Puntaje: " + player.getScore());
                        player.getCorrectas().add(preguntaActual);
                        proceso.guardarReporte(player.jugadorToJson());
                        System.exit(0);
                    } else {
                        JOptionPane.showMessageDialog(null, "¡RESPUESTA INCORRECTA! \n JUEGO TERMINADO :(");
                        player.getIncorrectas().add(preguntaActual);
                        proceso.guardarReporte(player.jugadorToJson());
                        System.exit(0);
                    }
                    break;

            }

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelPuntaje;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel txtNivel;
    private javax.swing.JLabel txtPregunta;
    // End of variables declaration//GEN-END:variables
}
